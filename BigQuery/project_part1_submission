Ιωακείμ-Ορφέας Νικολουδάκης, 3682
Μάριος-Κωνσταντίνος Κωνσταντάκης, 3219


Query 1: 
SELECT venue_capacity, venue_name
FROM `bigquery-public-data.ncaa_basketball.mbb_teams`
WHERE venue_city = "Stanford" 

Query complete (0.260 sec elapsed, 13.5 KB processed)


Query 2:
SELECT count(game_id) AS games_no
FROM `bigquery-public-data.ncaa_basketball.mbb_games_sr`
WHERE venue_city = "Stanford" AND season = 2013

Query complete (0.798 sec elapsed, 1.62 MB processed)


Query 3:
SELECT market, color
FROM `bigquery-public-data.ncaa_basketball.team_colors`
WHERE SUBSTR(color, 1,3) = "#ff" OR SUBSTR(Color, 1, 3) = "#FF"
ORDER BY market

Query complete (0.202 sec elapsed, 7.58 KB processed)


Query 4:
SELECT count(game_id) AS Games, ROUND(AVG(points_game), 2) AS Host_points, ROUND(AVG(opp_points_game), 2) AS Opponent_points
FROM `bigquery-public-data.ncaa_basketball.mbb_teams_games_sr`
WHERE season BETWEEN 2013 AND 2017 AND market = "Stanford" AND home_team = true AND win = true

Query complete (0.839 sec elapsed, 4.39 MB processed)


Query 5:
SELECT count(DISTINCT player_id) AS no_of_players
FROM `bigquery-public-data.ncaa_basketball.mbb_players_games_sr` games 
JOIN  `bigquery-public-data.ncaa_basketball.mbb_teams` teams
ON games.team_id = teams.id
WHERE birthplace_city = venue_city AND birthplace_state = venue_state

Query complete (1.441 sec elapsed, 76.64 MB processed)


Query 6:
SELECT win_name, lose_name, win_pts,lose_pts, (win_pts - lose_pts) AS point_difference
FROM `bigquery-public-data.ncaa_basketball.mbb_historical_tournament_games`
WHERE (win_pts-lose_pts) IN 
  (SELECT max(win_pts - lose_pts)
   FROM `bigquery-public-data.ncaa_basketball.mbb_historical_tournament_games`)
ORDER BY point_difference DESC 

Query complete (0.604 sec elapsed, 75.31 KB processed)


Query 7:
SELECT ROUND(count(season)*100/(SELECT count(*) 
    FROM `bigquery-public-data.ncaa_basketball.mbb_historical_tournament_games`), 2) AS percent
FROM `bigquery-public-data.ncaa_basketball.mbb_historical_tournament_games` 
WHERE win_seed > lose_seed

Query complete (0.521 sec elapsed, 33.08 KB processed)


Query 8:
SELECT DISTINCT team1.name as name1, team2.name as name2, team1.venue_state AS venue_state
FROM `bigquery-public-data.ncaa_basketball.mbb_teams` team1
JOIN `bigquery-public-data.ncaa_basketball.mbb_teams` team2
ON (team1.venue_state = team2.venue_state AND team1.id != team2.id)
JOIN(SELECT color1.color, color1.id as color1_id, color2.id as color2_id
            FROM `bigquery-public-data.ncaa_basketball.team_colors` color1
            JOIN `bigquery-public-data.ncaa_basketball.team_colors` color2
            ON color1.color = color2.color) colors
ON (team1.id = colors.color1_id AND team2.id = colors.color2_id)
ORDER BY name1

Query complete (0.612 sec elapsed, 33.95 KB processed)


Query 9:
SELECT DISTINCT team_market, count(DISTINCT player_id) AS no_of_players
FROM `bigquery-public-data.ncaa_basketball.mbb_pbp_sr` 
WHERE player_id in 
 (SELECT DISTINCT player_id from `bigquery-public-data.ncaa_basketball.mbb_pbp_sr`
  WHERE period = 1 AND SEASON >= 2013
  GROUP BY player_id
  HAVING sum(points_scored) >= 15)
GROUP BY team_market
HAVING no_of_players >= 5
ORDER BY no_of_players DESC, team_market
LIMIT 7

Query complete (1.512 sec elapsed, 251.14 MB processed)


Query 10:
SELECT birthplace_city, birthplace_state, birthplace_country, sum(points) AS total_points
FROM `bigquery-public-data.ncaa_basketball.mbb_players_games_sr` games
WHERE team_market = "Stanford"
GROUP BY birthplace_city, birthplace_state, birthplace_country
ORDER BY total_points DESC
LIMIT 3

Query complete (0.731 sec elapsed, 32.85 MB processed)


Query 11:
SELECT DISTINCT market, count(max_season_wins.wins) AS wins 
  FROM (SELECT season, max(wins) AS wins FROM `bigquery-public-data.ncaa_basketball.mbb_historical_teams_seasons` 
  WHERE season BETWEEN 1900 AND 2000
  GROUP BY season) max_season_wins
JOIN (SELECT * FROM `bigquery-public-data.ncaa_basketball.mbb_historical_teams_seasons` team_seasons
      WHERE SEASON BETWEEN 1900 AND 2000
      ) team_seasons
ON (max_Season_wins.wins = team_seasons.wins AND max_season_wins.season = team_seasons.season)
WHERE market is not null
GROUP BY Market
ORDER BY wins DESC, market
LIMIT 7

Query complete (0.872 sec elapsed, 1.98 MB processed)

